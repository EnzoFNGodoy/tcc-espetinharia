<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLimpar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        sgAAALIBa5Ro4AAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAMMSURBVFhH7ZVJ
        TBNRGMcbjVfiCQ4aD96MJIKJXjTKEkApmKBWwTQsCRowRRSVRXaBtoCGyMEELlJWZXEBFMQWNJFAgmig
        AWzptKUtm6gsnZZqQj/nTV8XATWlnXrhl3zJvHnv+/7/983LG5anKWCxduRHeg+nBXmZhef3tuHXngGJ
        57F9xjNCdsOjpIPQmOKnxVPMQ++c7T2WTonXJPkicWjiHbqBp5mF3nmEt9RRvIHnn4unmWVb/L+Ko9O+
        Lb4tzjgeE5+VxHOmOjn9c71xwWj8uuBIe1fe0QHqxzKWHmoXb7zml00nuAvgwM7pal6PvDYQJhtDYKYv
        gXxbHtjfeuswDD88Dm3pviZRMkM7nykqPaDglhg/sQtBV30F9PJCMKgE8HUke3WsPgxkopN0DFUe0zel
        +ufgNPegFSdwiQeXTSMRd2E2RgjmqxXwo6OMNoBiRVYAREu4zYRMdCIfp7qO5lV0jayOanlDCCw+zwZI
        qQBIpgKZeGY3oZdTJlrZyICZMnARp2+d+cFEH1X7WTXakerpGVieyKOFTL2lfzRhUBTpNV3Rrrd/WhIf
        qWwON8lEATAtjgVSWWIX+ZcJlWDWNCXYj0s5j+4Nt0peFwTy+mBYGEp1LPxb/M2EUc1Pw+WcQ9PBGUUt
        V7ZFwvJ4Ll2MVBSB5uUFmHufZBOwxmYmjCrByioh3IdLOoesNgC03ZeAJCwtX57IpQ+Wroe74TNYwySh
        TPDsJn52l1/H5ZxH2xktXvmcTxf+NpwGiqZQWBjkbRBdH9ZOrN27P4pLbR3qJBfPvUsEovk0LEnv0ALf
        P96EqfZzWJAP8/3JYFDybQZoE31lE1Bf6YXLuIZOHNuin7TcdEgcdWJxNJMeI3PqF1HUs6MB4aJLJ38z
        SJUgY704GhNPTtmuYRxmo1oQhdPci647pnNJmkULLY3nWMxILWasQYmX4eXMgDqhJ4pB2cLe7EAOwIeq
        XXgpc+jE8Y9nJHHrxb8YtcV78BLmIQl+poP4GqkShuEpz0F9jix005FKwW38yo2wWL8AtANNzEb2PlgA
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8WNz//JGBt/wAAAf8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AwYH/y51hv8PJCn/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wABAf8oZnX/LHCA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP80hpj/HEVP/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        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
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8KCEb/IBjR/yIZ3f8cFr//DAlR/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wEBBf8KCD//JBvs/wQEHP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wQDF/8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>